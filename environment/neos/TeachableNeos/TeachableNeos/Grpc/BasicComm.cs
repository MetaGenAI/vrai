// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: basic_comm.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from basic_comm.proto</summary>
public static partial class BasicCommReflection {

  #region Descriptor
  /// <summary>File descriptor for basic_comm.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static BasicCommReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChBiYXNpY19jb21tLnByb3RvIgcKBUVtcHR5IigKEENvbm5lY3Rpb25QYXJh",
          "bXMSFAoMaXNfcmVjb3JkaW5nGAEgASgIIhcKCFJlc3BvbnNlEgsKA3JlcxgB",
          "IAEoCSKmAQoQQ29ubmVjdGlvbkNvbmZpZxISCgphY3Rpb25fZGltGAEgASgF",
          "Eg8KB29ic19kaW0YAiABKAUSEwoLdmlzX29ic19kaW0YAyABKAUSFAoMZG9f",
          "cmVjb3JkaW5nGAQgASgIEhMKC2FnZW50X2luZGV4GAUgASgFEhUKDW51bWJl",
          "cl9hZ2VudHMYBiABKAUSFgoDcmVzGAcgASgLMgkuUmVzcG9uc2UiHAoKTmVv",
          "c0FjdGlvbhIOCgZhY3Rpb24YASADKAIiJgoSVGV4dHVyZU9ic2VydmF0aW9u",
          "EhAKCHRleHR1cmVzGAEgAygMIkQKD05lb3NPYnNlcnZhdGlvbhILCgNvYnMY",
          "ASADKAISDgoGcmV3YXJkGAIgASgCEhQKDHNob3VsZF9yZXNldBgDIAEoCDKk",
          "AgoIRGF0YUNvbW0SIgoGR2V0T2JzEgYuRW1wdHkaEC5OZW9zT2JzZXJ2YXRp",
          "b24SLAoNR2V0VGV4dHVyZU9icxIGLkVtcHR5GhMuVGV4dHVyZU9ic2VydmF0",
          "aW9uEiEKB1NlbmRBY3QSCy5OZW9zQWN0aW9uGgkuUmVzcG9uc2USHwoKUmVz",
          "ZXRBZ2VudBIGLkVtcHR5GgkuUmVzcG9uc2USOwoTRXN0YWJsaXNoQ29ubmVj",
          "dGlvbhIRLkNvbm5lY3Rpb25QYXJhbXMaES5Db25uZWN0aW9uQ29uZmlnEiMK",
          "DlN0b3BDb25uZWN0aW9uEgYuRW1wdHkaCS5SZXNwb25zZRIgCglHYXRoZXJB",
          "Y3QSBi5FbXB0eRoLLk5lb3NBY3Rpb25iBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Empty), global::Empty.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ConnectionParams), global::ConnectionParams.Parser, new[]{ "IsRecording" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Response), global::Response.Parser, new[]{ "Res" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ConnectionConfig), global::ConnectionConfig.Parser, new[]{ "ActionDim", "ObsDim", "VisObsDim", "DoRecording", "AgentIndex", "NumberAgents", "Res" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::NeosAction), global::NeosAction.Parser, new[]{ "Action" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::TextureObservation), global::TextureObservation.Parser, new[]{ "Textures" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::NeosObservation), global::NeosObservation.Parser, new[]{ "Obs", "Reward", "ShouldReset" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class Empty : pb::IMessage<Empty> {
  private static readonly pb::MessageParser<Empty> _parser = new pb::MessageParser<Empty>(() => new Empty());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Empty> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BasicCommReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Empty() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Empty(Empty other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Empty Clone() {
    return new Empty(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Empty);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Empty other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Empty other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class ConnectionParams : pb::IMessage<ConnectionParams> {
  private static readonly pb::MessageParser<ConnectionParams> _parser = new pb::MessageParser<ConnectionParams>(() => new ConnectionParams());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ConnectionParams> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BasicCommReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ConnectionParams() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ConnectionParams(ConnectionParams other) : this() {
    isRecording_ = other.isRecording_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ConnectionParams Clone() {
    return new ConnectionParams(this);
  }

  /// <summary>Field number for the "is_recording" field.</summary>
  public const int IsRecordingFieldNumber = 1;
  private bool isRecording_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsRecording {
    get { return isRecording_; }
    set {
      isRecording_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ConnectionParams);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ConnectionParams other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (IsRecording != other.IsRecording) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (IsRecording != false) hash ^= IsRecording.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (IsRecording != false) {
      output.WriteRawTag(8);
      output.WriteBool(IsRecording);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (IsRecording != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ConnectionParams other) {
    if (other == null) {
      return;
    }
    if (other.IsRecording != false) {
      IsRecording = other.IsRecording;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          IsRecording = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class Response : pb::IMessage<Response> {
  private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BasicCommReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Response(Response other) : this() {
    res_ = other.res_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Response Clone() {
    return new Response(this);
  }

  /// <summary>Field number for the "res" field.</summary>
  public const int ResFieldNumber = 1;
  private string res_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Res {
    get { return res_; }
    set {
      res_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Res != other.Res) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Res.Length != 0) hash ^= Res.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Res.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Res);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Res.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Res);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Response other) {
    if (other == null) {
      return;
    }
    if (other.Res.Length != 0) {
      Res = other.Res;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Res = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class ConnectionConfig : pb::IMessage<ConnectionConfig> {
  private static readonly pb::MessageParser<ConnectionConfig> _parser = new pb::MessageParser<ConnectionConfig>(() => new ConnectionConfig());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ConnectionConfig> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BasicCommReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ConnectionConfig() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ConnectionConfig(ConnectionConfig other) : this() {
    actionDim_ = other.actionDim_;
    obsDim_ = other.obsDim_;
    visObsDim_ = other.visObsDim_;
    doRecording_ = other.doRecording_;
    agentIndex_ = other.agentIndex_;
    numberAgents_ = other.numberAgents_;
    Res = other.res_ != null ? other.Res.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ConnectionConfig Clone() {
    return new ConnectionConfig(this);
  }

  /// <summary>Field number for the "action_dim" field.</summary>
  public const int ActionDimFieldNumber = 1;
  private int actionDim_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ActionDim {
    get { return actionDim_; }
    set {
      actionDim_ = value;
    }
  }

  /// <summary>Field number for the "obs_dim" field.</summary>
  public const int ObsDimFieldNumber = 2;
  private int obsDim_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ObsDim {
    get { return obsDim_; }
    set {
      obsDim_ = value;
    }
  }

  /// <summary>Field number for the "vis_obs_dim" field.</summary>
  public const int VisObsDimFieldNumber = 3;
  private int visObsDim_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int VisObsDim {
    get { return visObsDim_; }
    set {
      visObsDim_ = value;
    }
  }

  /// <summary>Field number for the "do_recording" field.</summary>
  public const int DoRecordingFieldNumber = 4;
  private bool doRecording_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool DoRecording {
    get { return doRecording_; }
    set {
      doRecording_ = value;
    }
  }

  /// <summary>Field number for the "agent_index" field.</summary>
  public const int AgentIndexFieldNumber = 5;
  private int agentIndex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AgentIndex {
    get { return agentIndex_; }
    set {
      agentIndex_ = value;
    }
  }

  /// <summary>Field number for the "number_agents" field.</summary>
  public const int NumberAgentsFieldNumber = 6;
  private int numberAgents_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int NumberAgents {
    get { return numberAgents_; }
    set {
      numberAgents_ = value;
    }
  }

  /// <summary>Field number for the "res" field.</summary>
  public const int ResFieldNumber = 7;
  private global::Response res_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Response Res {
    get { return res_; }
    set {
      res_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ConnectionConfig);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ConnectionConfig other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ActionDim != other.ActionDim) return false;
    if (ObsDim != other.ObsDim) return false;
    if (VisObsDim != other.VisObsDim) return false;
    if (DoRecording != other.DoRecording) return false;
    if (AgentIndex != other.AgentIndex) return false;
    if (NumberAgents != other.NumberAgents) return false;
    if (!object.Equals(Res, other.Res)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ActionDim != 0) hash ^= ActionDim.GetHashCode();
    if (ObsDim != 0) hash ^= ObsDim.GetHashCode();
    if (VisObsDim != 0) hash ^= VisObsDim.GetHashCode();
    if (DoRecording != false) hash ^= DoRecording.GetHashCode();
    if (AgentIndex != 0) hash ^= AgentIndex.GetHashCode();
    if (NumberAgents != 0) hash ^= NumberAgents.GetHashCode();
    if (res_ != null) hash ^= Res.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ActionDim != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ActionDim);
    }
    if (ObsDim != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ObsDim);
    }
    if (VisObsDim != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(VisObsDim);
    }
    if (DoRecording != false) {
      output.WriteRawTag(32);
      output.WriteBool(DoRecording);
    }
    if (AgentIndex != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(AgentIndex);
    }
    if (NumberAgents != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(NumberAgents);
    }
    if (res_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(Res);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ActionDim != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActionDim);
    }
    if (ObsDim != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObsDim);
    }
    if (VisObsDim != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(VisObsDim);
    }
    if (DoRecording != false) {
      size += 1 + 1;
    }
    if (AgentIndex != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AgentIndex);
    }
    if (NumberAgents != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumberAgents);
    }
    if (res_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Res);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ConnectionConfig other) {
    if (other == null) {
      return;
    }
    if (other.ActionDim != 0) {
      ActionDim = other.ActionDim;
    }
    if (other.ObsDim != 0) {
      ObsDim = other.ObsDim;
    }
    if (other.VisObsDim != 0) {
      VisObsDim = other.VisObsDim;
    }
    if (other.DoRecording != false) {
      DoRecording = other.DoRecording;
    }
    if (other.AgentIndex != 0) {
      AgentIndex = other.AgentIndex;
    }
    if (other.NumberAgents != 0) {
      NumberAgents = other.NumberAgents;
    }
    if (other.res_ != null) {
      if (res_ == null) {
        res_ = new global::Response();
      }
      Res.MergeFrom(other.Res);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ActionDim = input.ReadInt32();
          break;
        }
        case 16: {
          ObsDim = input.ReadInt32();
          break;
        }
        case 24: {
          VisObsDim = input.ReadInt32();
          break;
        }
        case 32: {
          DoRecording = input.ReadBool();
          break;
        }
        case 40: {
          AgentIndex = input.ReadInt32();
          break;
        }
        case 48: {
          NumberAgents = input.ReadInt32();
          break;
        }
        case 58: {
          if (res_ == null) {
            res_ = new global::Response();
          }
          input.ReadMessage(res_);
          break;
        }
      }
    }
  }

}

public sealed partial class NeosAction : pb::IMessage<NeosAction> {
  private static readonly pb::MessageParser<NeosAction> _parser = new pb::MessageParser<NeosAction>(() => new NeosAction());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<NeosAction> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BasicCommReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public NeosAction() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public NeosAction(NeosAction other) : this() {
    action_ = other.action_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public NeosAction Clone() {
    return new NeosAction(this);
  }

  /// <summary>Field number for the "action" field.</summary>
  public const int ActionFieldNumber = 1;
  private static readonly pb::FieldCodec<float> _repeated_action_codec
      = pb::FieldCodec.ForFloat(10);
  private readonly pbc::RepeatedField<float> action_ = new pbc::RepeatedField<float>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<float> Action {
    get { return action_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as NeosAction);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(NeosAction other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!action_.Equals(other.action_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= action_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    action_.WriteTo(output, _repeated_action_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += action_.CalculateSize(_repeated_action_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(NeosAction other) {
    if (other == null) {
      return;
    }
    action_.Add(other.action_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 13: {
          action_.AddEntriesFrom(input, _repeated_action_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class TextureObservation : pb::IMessage<TextureObservation> {
  private static readonly pb::MessageParser<TextureObservation> _parser = new pb::MessageParser<TextureObservation>(() => new TextureObservation());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<TextureObservation> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BasicCommReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TextureObservation() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TextureObservation(TextureObservation other) : this() {
    textures_ = other.textures_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TextureObservation Clone() {
    return new TextureObservation(this);
  }

  /// <summary>Field number for the "textures" field.</summary>
  public const int TexturesFieldNumber = 1;
  private static readonly pb::FieldCodec<pb::ByteString> _repeated_textures_codec
      = pb::FieldCodec.ForBytes(10);
  private readonly pbc::RepeatedField<pb::ByteString> textures_ = new pbc::RepeatedField<pb::ByteString>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<pb::ByteString> Textures {
    get { return textures_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as TextureObservation);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(TextureObservation other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!textures_.Equals(other.textures_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= textures_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    textures_.WriteTo(output, _repeated_textures_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += textures_.CalculateSize(_repeated_textures_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(TextureObservation other) {
    if (other == null) {
      return;
    }
    textures_.Add(other.textures_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          textures_.AddEntriesFrom(input, _repeated_textures_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class NeosObservation : pb::IMessage<NeosObservation> {
  private static readonly pb::MessageParser<NeosObservation> _parser = new pb::MessageParser<NeosObservation>(() => new NeosObservation());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<NeosObservation> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BasicCommReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public NeosObservation() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public NeosObservation(NeosObservation other) : this() {
    obs_ = other.obs_.Clone();
    reward_ = other.reward_;
    shouldReset_ = other.shouldReset_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public NeosObservation Clone() {
    return new NeosObservation(this);
  }

  /// <summary>Field number for the "obs" field.</summary>
  public const int ObsFieldNumber = 1;
  private static readonly pb::FieldCodec<float> _repeated_obs_codec
      = pb::FieldCodec.ForFloat(10);
  private readonly pbc::RepeatedField<float> obs_ = new pbc::RepeatedField<float>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<float> Obs {
    get { return obs_; }
  }

  /// <summary>Field number for the "reward" field.</summary>
  public const int RewardFieldNumber = 2;
  private float reward_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Reward {
    get { return reward_; }
    set {
      reward_ = value;
    }
  }

  /// <summary>Field number for the "should_reset" field.</summary>
  public const int ShouldResetFieldNumber = 3;
  private bool shouldReset_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool ShouldReset {
    get { return shouldReset_; }
    set {
      shouldReset_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as NeosObservation);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(NeosObservation other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!obs_.Equals(other.obs_)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Reward, other.Reward)) return false;
    if (ShouldReset != other.ShouldReset) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= obs_.GetHashCode();
    if (Reward != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Reward);
    if (ShouldReset != false) hash ^= ShouldReset.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    obs_.WriteTo(output, _repeated_obs_codec);
    if (Reward != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(Reward);
    }
    if (ShouldReset != false) {
      output.WriteRawTag(24);
      output.WriteBool(ShouldReset);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += obs_.CalculateSize(_repeated_obs_codec);
    if (Reward != 0F) {
      size += 1 + 4;
    }
    if (ShouldReset != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(NeosObservation other) {
    if (other == null) {
      return;
    }
    obs_.Add(other.obs_);
    if (other.Reward != 0F) {
      Reward = other.Reward;
    }
    if (other.ShouldReset != false) {
      ShouldReset = other.ShouldReset;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 13: {
          obs_.AddEntriesFrom(input, _repeated_obs_codec);
          break;
        }
        case 21: {
          Reward = input.ReadFloat();
          break;
        }
        case 24: {
          ShouldReset = input.ReadBool();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
